// Code generated by ogen, DO NOT EDIT.

package filmlibAPI

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// AddActor implements addActor operation.
//
// Добавление актёра.
//
// POST /actors
func (UnimplementedHandler) AddActor(ctx context.Context, req *Actor) error {
	return ht.ErrNotImplemented
}

// AddMovie implements addMovie operation.
//
// Добавление нового фильма.
//
// POST /movies
func (UnimplementedHandler) AddMovie(ctx context.Context, req *Movie) error {
	return ht.ErrNotImplemented
}

// DeleteActorByID implements deleteActorByID operation.
//
// Удаление актёра по ID.
//
// DELETE /actors/{actor_id}
func (UnimplementedHandler) DeleteActorByID(ctx context.Context, params DeleteActorByIDParams) error {
	return ht.ErrNotImplemented
}

// GetAllActors implements getAllActors operation.
//
// Получение списка актёров.
//
// GET /actors
func (UnimplementedHandler) GetAllActors(ctx context.Context) (r Actors, _ error) {
	return r, ht.ErrNotImplemented
}

// GetMovies implements getMovies operation.
//
// Получение отсортированного списка фильмов.
//
// GET /movies
func (UnimplementedHandler) GetMovies(ctx context.Context, params GetMoviesParams) (r Movies, _ error) {
	return r, ht.ErrNotImplemented
}

// MoviesMovieIDDelete implements DELETE /movies/{movie_id} operation.
//
// Удаление фильма по ID.
//
// DELETE /movies/{movie_id}
func (UnimplementedHandler) MoviesMovieIDDelete(ctx context.Context, params MoviesMovieIDDeleteParams) error {
	return ht.ErrNotImplemented
}

// MoviesMovieIDPatch implements PATCH /movies/{movie_id} operation.
//
// Изменение информации о фильме.
//
// PATCH /movies/{movie_id}
func (UnimplementedHandler) MoviesMovieIDPatch(ctx context.Context, params MoviesMovieIDPatchParams) error {
	return ht.ErrNotImplemented
}

// PatchActorById implements patchActorById operation.
//
// Изменение информации об актёре.
//
// PATCH /actors/{actor_id}
func (UnimplementedHandler) PatchActorById(ctx context.Context, params PatchActorByIdParams) error {
	return ht.ErrNotImplemented
}

// NewError creates *ErrorStatusCode from error returned by handler.
//
// Used for common default response.
func (UnimplementedHandler) NewError(ctx context.Context, err error) (r *ErrorStatusCode) {
	r = new(ErrorStatusCode)
	return r
}
